@model eTrak.Dal.Models.Source

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enquiry Sources</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.soDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.soDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.soDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.soStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.soStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.soStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.soAffiliate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.soAffiliate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.soAffiliate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div ng-show="false" class="form-group">
            @Html.LabelFor(model => model.soWhiteLabelCode, "White Label", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("soWhiteLabelCode", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.soWhiteLabelCode, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.soLanguageCode, "Language", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("soLanguageCode", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.soLanguageCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12 col-sm-12 col-lg-12">
            <div class="col-md-2 col-sm-2 col-lg-2"></div>
            <div class="col-md-8 col-sm-8 col-lg-8">
                @Html.CheckBoxFor(model => model.PrioritySource)
                @Html.LabelFor(model => model.soIsPrioritySource, "Is Priority Source", htmlAttributes: new { @class = "control-label" })
            </div>
        </div>

        <div class="form-group col-md-12 col-sm-12 col-lg-12">
            <div class="col-md-2 col-sm-2 col-lg-2"></div>
            <div class="col-md-8 col-sm-8 col-lg-8">
                @Html.CheckBoxFor(model => model.ReadOnly)
                @Html.LabelFor(model => model.soIsReadOnly, "Is ReadOnly", htmlAttributes: new { @class = "control-label" })
            </div>
        </div>
        
        <div class="form-group col-md-12 col-sm-12 col-lg-12">
            <div class="col-md-2 col-sm-2 col-lg-2"></div>
            <div class="col-md-8 col-sm-8 col-lg-8">
                @Html.CheckBoxFor(model => model.IsApproved)
                @Html.LabelFor(model => model.soIsApproved, "Is Approved", htmlAttributes: new { @class = "control-label" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
